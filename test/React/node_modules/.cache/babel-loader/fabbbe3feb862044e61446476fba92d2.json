{"ast":null,"code":"var _jsxFileName = \"/Users/panghaosen/Desktop/first-react-demo/src/view/bookTime/index.jsx\";\nimport React from 'react';\nimport './index.css';\nimport { Input, Button, InputNumber } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isNumber = val => {\n      let isNum = false;\n      var regPos = /^\\d+(\\.\\d+)?$/;\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n\n      if (regPos.test(val) || regNeg.test(val)) {\n        isNum = true;\n        return isNum;\n      } else {\n        isNum = false;\n        return isNum;\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      this.setState = (state, callback) => {\n        return;\n      };\n    };\n\n    this.state = {\n      name: '',\n      realPeople: '',\n      phone: '',\n      numberPeopleAlert: false,\n      phoneNumberAlert: false,\n      completeAlert: false,\n      alerMessage: 'Please complete the form',\n      failCreateOrder: false\n    };\n  }\n\n  goBookConfirm() {\n    let name = this.state.name;\n    let realPeople = this.state.realPeople;\n    let phone = this.state.phone; // let people = this.props.location.state.people\n    // let inputDate = this.props.location.state.inputDate\n    // let room = this.props.location.state.room\n    // let span = this.props.location.state.span\n    // let data = []\n    // span.map((value)=>{\n    //     let obj = {\n    //         name,realPeople,phone,people,inputDate,room,value\n    //     }\n    //     return data.push(obj)\n    // })\n    // console.log(data)\n\n    if (!name || !realPeople || !phone) {\n      this.setState({\n        completeAlert: true,\n        alerMessage: 'Please complete the form'\n      });\n    }\n\n    if (!this.props.location.state) {\n      this.setState({\n        completeAlert: true,\n        alerMessage: 'You did not select room yet, please go back.'\n      });\n    } else if (!name || !realPeople || !phone) {\n      this.setState({\n        completeAlert: true,\n        alerMessage: 'Please complete the form'\n      });\n    }\n\n    setTimeout(() => {\n      this.setState({\n        completeAlert: false\n      });\n    }, 2000);\n    axios.post('./api/create', { ...this.props.location.state,\n      name,\n      phone,\n      realPeople\n    }).then(res => {\n      if (res.data === 'one phone number cant have 2 orders') {\n        this.setState({\n          failCreateOrder: true\n        }, () => {\n          setTimeout(() => {\n            this.setState({\n              failCreateOrder: false\n            });\n          }, 5000);\n        });\n      } else {\n        this.props.history.push({\n          pathname: '/bookingConfirm',\n          state: { ...this.props.location.state,\n            name,\n            phone,\n            realPeople\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    var {\n      numberPeopleAlert,\n      phoneNumberAlert,\n      completeAlert,\n      failCreateOrder\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select_time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Booking details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => {\n          this.setState({\n            name: e.target.value\n          });\n        },\n        className: \"name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        className: \"numberPeople\",\n        min: 0,\n        max: 15,\n        onChange: value => {\n          this.setState({\n            realPeople: value\n          });\n        },\n        onBlur: () => {\n          this.setState({\n            phoneNumberAlert: false\n          });\n        },\n        placeholder: \"Number of people\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), phoneNumberAlert && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert_message\",\n        children: \"Please input integer number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"phone\",\n        placeholder: \"Phone number\",\n        onChange: e => {\n          let isNum = this.isNumber(e.target.value);\n\n          if (!isNum) {\n            this.setState({\n              numberPeopleAlert: true\n            });\n          }\n\n          this.setState({\n            phone: e.target.value\n          });\n        },\n        onBlur: () => {\n          this.setState({\n            numberPeopleAlert: false\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), numberPeopleAlert && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert_phone_message\",\n        children: \"Please input correct number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit_div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submit\",\n          onClick: this.goBookConfirm.bind(this),\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alerMeassageDiv\",\n        children: completeAlert && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"completeAlertbooktime\",\n          children: [\" \", this.state.alerMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failedCreateOrder\",\n        children: failCreateOrder && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"completeAlertbooktime\",\n          children: \" One phone number allow to create a single order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default BookTime;","map":{"version":3,"sources":["/Users/panghaosen/Desktop/first-react-demo/src/view/bookTime/index.jsx"],"names":["React","Input","Button","InputNumber","axios","BookTime","Component","constructor","props","isNumber","val","isNum","regPos","regNeg","test","componentWillUnmount","setState","state","callback","name","realPeople","phone","numberPeopleAlert","phoneNumberAlert","completeAlert","alerMessage","failCreateOrder","goBookConfirm","location","setTimeout","post","then","res","data","history","push","pathname","render","e","target","value","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,WAAvB,QAAyC,MAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAQA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqFnBC,QArFmB,GAqFPC,GAAD,IAAS;AAChB,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAIC,MAAM,GAAG,eAAb;AACA,UAAIC,MAAM,GAAG,oFAAb,CAHgB,CAGmF;;AACnG,UAAGD,MAAM,CAACE,IAAP,CAAYJ,GAAZ,KAAoBG,MAAM,CAACC,IAAP,CAAYJ,GAAZ,CAAvB,EAAyC;AACrCC,QAAAA,KAAK,GAAG,IAAR;AACA,eAAOA,KAAP;AACC,OAHL,MAGW;AACHA,QAAAA,KAAK,GAAG,KAAR;AACJ,eAAOA,KAAP;AACC;AACJ,KAhGc;;AAAA,SAkGfI,oBAlGe,GAkGQ,MAAM;AACzB,WAAKC,QAAL,GAAgB,CAACC,KAAD,EAAOC,QAAP,KAAkB;AAChC;AACD,OAFD;AAGH,KAtGc;;AAEf,SAAKD,KAAL,GAAa;AACTE,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,iBAAiB,EAAE,KAJV;AAKTC,MAAAA,gBAAgB,EAAE,KALT;AAMTC,MAAAA,aAAa,EAAC,KANL;AAOTC,MAAAA,WAAW,EAAC,0BAPH;AAQTC,MAAAA,eAAe,EAAC;AARP,KAAb;AAUH;;AAGDC,EAAAA,aAAa,GAAG;AACZ,QAAIR,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACA,QAAIC,UAAU,GAAG,KAAKH,KAAL,CAAWG,UAA5B;AACA,QAAIC,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAvB,CAHY,CAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,QAAG,CAACF,IAAD,IAAO,CAACC,UAAR,IAAoB,CAACC,KAAxB,EAA8B;AAC1B,WAAKL,QAAL,CAAc;AACVQ,QAAAA,aAAa,EAAC,IADJ;AAEVC,QAAAA,WAAW,EAAC;AAFF,OAAd;AAIH;;AACD,QAAG,CAAC,KAAKjB,KAAL,CAAWoB,QAAX,CAAoBX,KAAxB,EAA8B;AAC1B,WAAKD,QAAL,CAAc;AACVQ,QAAAA,aAAa,EAAC,IADJ;AAEVC,QAAAA,WAAW,EAAC;AAFF,OAAd;AAIH,KALD,MAKM,IAAG,CAACN,IAAD,IAAO,CAACC,UAAR,IAAoB,CAACC,KAAxB,EAA8B;AAChC,WAAKL,QAAL,CAAc;AACVQ,QAAAA,aAAa,EAAC,IADJ;AAEVC,QAAAA,WAAW,EAAC;AAFF,OAAd;AAIH;;AACGI,IAAAA,UAAU,CAAC,MAAI;AACf,WAAKb,QAAL,CAAc;AACVQ,QAAAA,aAAa,EAAC;AADJ,OAAd;AAGH,KAJa,EAIX,IAJW,CAAV;AAKJpB,IAAAA,KAAK,CAAC0B,IAAN,CAAW,cAAX,EAA0B,EACtB,GAAG,KAAKtB,KAAL,CAAWoB,QAAX,CAAoBX,KADD;AAEtBE,MAAAA,IAFsB;AAGtBE,MAAAA,KAHsB;AAItBD,MAAAA;AAJsB,KAA1B,EAKGW,IALH,CAKSC,GAAD,IAAO;AACX,UAAGA,GAAG,CAACC,IAAJ,KAAY,qCAAf,EAAqD;AACjD,aAAKjB,QAAL,CAAc;AACVU,UAAAA,eAAe,EAAC;AADN,SAAd,EAEE,MAAI;AACFG,UAAAA,UAAU,CAAC,MAAI;AACX,iBAAKb,QAAL,CAAc;AACVU,cAAAA,eAAe,EAAC;AADN,aAAd;AAGH,WAJS,EAIP,IAJO,CAAV;AAKH,SARD;AASH,OAVD,MAUK;AACD,aAAKlB,KAAL,CAAW0B,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAE,iBADU;AAEpBnB,UAAAA,KAAK,EAAE,EACH,GAAG,KAAKT,KAAL,CAAWoB,QAAX,CAAoBX,KADpB;AAEHE,YAAAA,IAFG;AAGHE,YAAAA,KAHG;AAIHD,YAAAA;AAJG;AAFa,SAAxB;AASH;AAEJ,KA5BD;AA6BH;;AAqBDiB,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEf,MAAAA,iBAAF;AAAqBC,MAAAA,gBAArB;AAAsCC,MAAAA,aAAtC;AAAoDE,MAAAA;AAApD,QAAsE,KAAKT,KAA/E;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAMJ,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAGqB,CAAD,IAAO;AACpB,eAAKtB,QAAL,CAAc;AACVG,YAAAA,IAAI,EAAGmB,CAAC,CAACC,MAAF,CAASC;AADN,WAAd;AAIH,SALD;AAKG,QAAA,SAAS,EAAC,MALb;AAKoB,QAAA,WAAW,EAAC;AALhC;AAAA;AAAA;AAAA;AAAA,cANI,eAaJ,QAAC,WAAD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,GAAG,EAAE,CAFT;AAGI,QAAA,GAAG,EAAE,EAHT;AAII,QAAA,QAAQ,EAAGA,KAAD,IAAW;AACb,eAAKxB,QAAL,CAAc;AACVI,YAAAA,UAAU,EAACoB;AADD,WAAd;AAGH,SART;AAWI,QAAA,MAAM,EAAI,MAAK;AACX,eAAKxB,QAAL,CAAc;AACVO,YAAAA,gBAAgB,EAAC;AADP,WAAd;AAGH,SAfL;AAiBI,QAAA,WAAW,EAAC;AAjBhB;AAAA;AAAA;AAAA;AAAA,cAbI,EAgCAA,gBAAgB,iBAAK;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCrB,eAkCJ,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,WAAW,EAAC,cAArC;AAAoD,QAAA,QAAQ,EAAIe,CAAD,IAAK;AAChE,cAAI3B,KAAK,GAAG,KAAKF,QAAL,CAAc6B,CAAC,CAACC,MAAF,CAASC,KAAvB,CAAZ;;AAEA,cAAG,CAAC7B,KAAJ,EAAU;AACN,iBAAKK,QAAL,CAAc;AACVM,cAAAA,iBAAiB,EAAC;AADR,aAAd;AAGH;;AACD,eAAKN,QAAL,CAAc;AACVK,YAAAA,KAAK,EAACiB,CAAC,CAACC,MAAF,CAASC;AADL,WAAd;AAGH,SAXD;AAWG,QAAA,MAAM,EAAI,MAAK;AACd,eAAKxB,QAAL,CAAc;AACVM,YAAAA,iBAAiB,EAAC;AADR,WAAd;AAGH;AAfD;AAAA;AAAA;AAAA;AAAA,cAlCI,EAmDAA,iBAAiB,iBAAI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDrB,eAuDJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,KAAKK,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvDI,eA0DJ;AAAK,QAAA,SAAS,EAAG,iBAAjB;AAAA,kBACMjB,aAAa,iBAAG;AAAM,UAAA,SAAS,EAAG,uBAAlB;AAAA,0BAA4C,KAAKP,KAAL,CAAWQ,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,cA1DI,eA6DJ;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA,kBACMC,eAAe,iBAAG;AAAM,UAAA,SAAS,EAAG,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADxB;AAAA;AAAA;AAAA;AAAA,cA7DI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAmEH;;AA/KkC;;AAmLvC,eAAerB,QAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Input, Button,InputNumber} from 'antd';\nimport axios from 'axios'\n\n\n\n\n\n\n\nclass BookTime extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            realPeople: '',\n            phone: '',\n            numberPeopleAlert: false,\n            phoneNumberAlert: false,\n            completeAlert:false,\n            alerMessage:'Please complete the form',\n            failCreateOrder:false\n        }\n    }\n\n\n    goBookConfirm() {\n        let name = this.state.name\n        let realPeople = this.state.realPeople\n        let phone = this.state.phone\n        // let people = this.props.location.state.people\n        // let inputDate = this.props.location.state.inputDate\n        // let room = this.props.location.state.room\n        // let span = this.props.location.state.span\n        // let data = []\n        // span.map((value)=>{\n        //     let obj = {\n        //         name,realPeople,phone,people,inputDate,room,value\n\n        //     }\n        //     return data.push(obj)\n        // })\n        // console.log(data)\n        if(!name||!realPeople||!phone){\n            this.setState({\n                completeAlert:true,\n                alerMessage:'Please complete the form'\n            })\n        }\n        if(!this.props.location.state){\n            this.setState({\n                completeAlert:true,\n                alerMessage:'You did not select room yet, please go back.'\n            })\n        }else if(!name||!realPeople||!phone){\n            this.setState({\n                completeAlert:true,\n                alerMessage:'Please complete the form'\n            })\n        }\n            setTimeout(()=>{\n            this.setState({\n                completeAlert:false,\n            })\n        }, 2000)\n        axios.post('./api/create',{\n            ...this.props.location.state,\n            name,\n            phone,\n            realPeople\n        }).then((res)=>{\n            if(res.data ==='one phone number cant have 2 orders'){\n                this.setState({\n                    failCreateOrder:true,\n                },()=>{\n                    setTimeout(()=>{\n                        this.setState({\n                            failCreateOrder:false,\n                        })\n                    }, 5000)\n                })\n            }else{\n                this.props.history.push({\n                    pathname: '/bookingConfirm',\n                    state: {\n                        ...this.props.location.state,\n                        name,\n                        phone,\n                        realPeople\n                    }\n                });\n            }\n\n        })\n    }\n\n    isNumber = (val) => {\n        let isNum = false \n        var regPos = /^\\d+(\\.\\d+)?$/; \n        var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n        if(regPos.test(val) || regNeg.test(val)) {\n            isNum = true\n            return isNum;\n            } else {\n                isNum = false\n            return isNum;\n            }\n        }\n\n        componentWillUnmount = () => {\n            this.setState = (state,callback)=>{\n              return;\n            };\n        }\n        \n    render() {\n        var { numberPeopleAlert, phoneNumberAlert,completeAlert,failCreateOrder}= this.state\n        return (<div className=\"select_time\">\n            <p>\n                Booking details\n            </p>\n\n\n            <Input onChange={(e) => {\n                this.setState({\n                    name : e.target.value\n                })\n\n            }} className=\"name\" placeholder=\"Name\"></Input>\n\n            <InputNumber\n                className=\"numberPeople\"\n                min={0}\n                max={15}\n                onChange={(value) => {\n                        this.setState({\n                            realPeople:value\n                        })\n                    }\n                }\n\n                onBlur = {() =>{\n                    this.setState({\n                        phoneNumberAlert:false\n                    })\n                }}\n\n                placeholder=\"Number of people\"/>\n            {\n                phoneNumberAlert && (<span className='alert_message' >Please input integer number!</span>)\n            }\n            <Input className=\"phone\" placeholder=\"Phone number\" onChange ={(e)=>{\n                let isNum = this.isNumber(e.target.value)\n                \n                if(!isNum){\n                    this.setState({\n                        numberPeopleAlert:true\n                    })\n                }\n                this.setState({\n                    phone:e.target.value\n                })\n            }} onBlur = {() =>{\n                this.setState({\n                    numberPeopleAlert:false\n                })\n            }}></Input>\n            {\n                numberPeopleAlert&& (<span className='alert_phone_message'>Please input correct number!</span>)\n            }\n\n\n            <div className=\"submit_div\">\n                <Button className=\"submit\" onClick={this.goBookConfirm.bind(this)}> Submit </Button>\n            </div>\n            <div className = 'alerMeassageDiv'>\n                { completeAlert&&(<span className = 'completeAlertbooktime'> {this.state.alerMessage}</span>)}\n            </div>\n            <div className = 'failedCreateOrder'>\n                { failCreateOrder&&(<span className = 'completeAlertbooktime'> One phone number allow to create a single order</span>)}\n            </div>\n        </div >\n\n        )\n    }\n}\n\n\nexport default BookTime;"]},"metadata":{},"sourceType":"module"}