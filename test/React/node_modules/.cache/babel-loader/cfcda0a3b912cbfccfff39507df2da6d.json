{"ast":null,"code":"var _jsxFileName = \"/Users/panghaosen/Desktop/first-react-demo/src/view/selectRoom/index.jsx\";\nimport React from 'react';\nimport { DatePicker } from 'antd';\nimport './index.css';\nimport { Button, Select } from 'antd';\nimport moment from 'moment';\nimport deepclone from 'loadsh';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select; // const children = [<Option key={0}>13:00-14:00</Option>, <Option key={1}>14:00-15:00</Option>, <Option key={2}>15:00-16:00</Option>, <Option key={3}>16:00-17:00</Option>, <Option key={4}>17:00-18:00</Option>, <Option key={5}>18:00-19:00</Option>, <Option key={6}>19:00-20:00</Option>, <Option key={7}>20:00-21:00</Option>, <Option key={8}>21:00-22:00</Option>, <Option key={9}>22:00-23:00</Option>, <Option key={10}>23:00-24:00</Option>];\n\nclass SelectRoom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showRoom = value => {\n      var {\n        roomList\n      } = this.state;\n\n      if (value.value != null) {\n        this.setState({\n          showRoom: true,\n          people: value.value,\n          completeAlert: false\n        });\n\n        if (value.value === '1-3') {\n          let deepcopy = deepclone.cloneDeep(roomList);\n          deepcopy.map(v => {\n            v.roomChildren.map(value => {\n              return value.disabled = true;\n            });\n            return true;\n          });\n          deepcopy[0].roomChildren[0].disabled = false;\n          deepcopy[0].roomChildren[1].disabled = false;\n          this.setState({\n            roomList: deepcopy\n          });\n        } else if (value.value === '4-8') {\n          let deepcopy = deepclone.cloneDeep(roomList);\n          deepcopy.map(v => {\n            v.roomChildren.map(value => {\n              return value.disabled = true;\n            });\n            return true;\n          });\n          deepcopy[1].roomChildren[0].disabled = false;\n          deepcopy[1].roomChildren[1].disabled = false;\n          this.setState({\n            roomList: deepcopy\n          });\n        } else if (value.value === '9-15') {\n          let deepcopy = deepclone.cloneDeep(roomList);\n          deepcopy.map(v => {\n            v.roomChildren.map(value => {\n              return value.disabled = true;\n            });\n            return true;\n          });\n          deepcopy[2].roomChildren[0].disabled = false;\n          deepcopy[2].roomChildren[1].disabled = false;\n          deepcopy[2].roomChildren[2].disabled = false;\n          this.setState({\n            roomList: deepcopy\n          });\n        } else {\n          let deepcopy = deepclone.cloneDeep(roomList);\n          deepcopy.map(v => {\n            v.roomChildren.map(value => {\n              return value.disabled = true;\n            });\n            return true;\n          });\n          deepcopy[3].roomChildren[0].disabled = false;\n          this.setState({\n            roomList: deepcopy\n          });\n        }\n      }\n    };\n\n    this.timeAvailable = (date, dateString) => {\n      // console.log('datatstring', dateString)\n      this.setState({\n        showPeriod: true,\n        inputDate: dateString,\n        completeAlert: false\n      });\n    };\n\n    this.selectRoomBtn = item => {\n      this.setState({\n        currentCheckedRoom: item.roomNumber\n      });\n      axios.get('/api/queryAvailableSpan', {\n        params: {\n          inputDate: this.state.inputDate,\n          room: item.roomNumber\n        }\n      }).then(res => {\n        let availableArr = deepclone.cloneDeep(this.state.timeSpan);\n        availableArr.forEach((value, index) => {\n          value.disabled = false;\n          res.data.forEach((v, i) => {\n            if (v.span === value.time) {\n              value.disabled = true;\n            }\n          });\n        });\n        this.setState({\n          timeSpan: availableArr\n        });\n      });\n    };\n\n    this.state = {\n      completeAlert: false,\n      span: [],\n      currentCheckedRoom: '',\n      inputDate: '',\n      people: '',\n      showRoom: false,\n      showPeriod: false,\n      timeSpan: [{\n        key: 0,\n        time: '13:00-14:00',\n        disabled: false\n      }, {\n        key: 1,\n        time: '14:00-15:00',\n        disabled: false\n      }, {\n        key: 2,\n        time: '15:00-16:00',\n        disabled: false\n      }, {\n        key: 3,\n        time: '16:00-17:00',\n        disabled: false\n      }, {\n        key: 4,\n        time: '17:00-18:00',\n        disabled: false\n      }, {\n        key: 5,\n        time: '18:00-19:00',\n        disabled: false\n      }, {\n        key: 6,\n        time: '19:00-20:00',\n        disabled: false\n      }, {\n        key: 7,\n        time: '20:00-21:00',\n        disabled: false\n      }, {\n        key: 8,\n        time: '21:00-22:00',\n        disabled: false\n      }, {\n        key: 9,\n        time: '22:00-23:00',\n        disabled: false\n      }, {\n        key: 10,\n        time: '23:00-24:00',\n        disabled: false\n      }],\n      numberPeople: [{\n        value: '1-3',\n        key: '1'\n      }, {\n        value: '4-8',\n        key: '2'\n      }, {\n        value: '9-15',\n        key: '3'\n      }, {\n        value: '16+',\n        key: '4'\n      }],\n      roomList: [{\n        roomSize: 'small',\n        roomChildren: [{\n          roomNumber: 'Small Room 1',\n          disabled: false\n        }, {\n          roomNumber: 'Small Room 2',\n          disabled: false\n        }]\n      }, {\n        roomSize: 'middle',\n        roomChildren: [{\n          roomNumber: 'Middle Room 1',\n          disabled: false\n        }, {\n          roomNumber: 'Middle Room 2',\n          disabled: false\n        }]\n      }, {\n        roomSize: 'large',\n        roomChildren: [{\n          roomNumber: 'Large Room 1',\n          disabled: false\n        }, {\n          roomNumber: 'Large Room 2',\n          disabled: false\n        }, {\n          roomNumber: 'Large Room 3',\n          disabled: false\n        }]\n      }, {\n        roomSize: 'party',\n        roomChildren: [{\n          roomNumber: 'Party Room',\n          disabled: false\n        }]\n      }]\n    };\n  }\n\n  confirmBooking() {\n    let people = this.state.people;\n    let inputDate = this.state.inputDate;\n    let room = this.state.currentCheckedRoom;\n    let span = this.state.span;\n\n    if (!people || !inputDate || !room || !span.length) {\n      this.setState({\n        completeAlert: true\n      });\n      return;\n    }\n\n    this.props.history.push({\n      pathname: '/bookTime',\n      state: {\n        people,\n        inputDate,\n        room,\n        span\n      }\n    });\n  }\n\n  render() {\n    var {\n      roomList,\n      numberPeople,\n      timeSpan,\n      showRoom,\n      showPeriod,\n      completeAlert\n    } = this.state; // var {roomChildren} = roomList\n\n    var timeSpanArray = [];\n    timeSpan.map((value, index) => {\n      return timeSpanArray.push( /*#__PURE__*/_jsxDEV(Option, {\n        disabled: value.disabled,\n        value: value.time,\n        children: value.time\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 39\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select_room_main_board\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataInputBoard\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          onChange: this.showRoom,\n          labelInValue: \"true\",\n          placeholder: \"Number of people\",\n          className: \"select_Number_of_people\",\n          children: numberPeople.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: value.value,\n              children: value.value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          placeholder: \"Date\",\n          className: \"inputDate\",\n          disabledDate: currentDate => {\n            return currentDate && currentDate > moment().add(7, 'days');\n          },\n          onChange: this.timeAvailable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), showRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select_room\",\n        children: roomList.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room_item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: value.roomChildren.map((v, i) => {\n                return (\n                  /*#__PURE__*/\n                  // <Radio.Button key={Math.random()} value=\"a\">{v.roomNumber}</Radio.Button>\n                  _jsxDEV(Button, {\n                    disabled: v.disabled,\n                    value: v.roomSize,\n                    className: v.roomNumber,\n                    onClick: () => {\n                      this.selectRoomBtn(v);\n                    },\n                    children: [\" \", v.roomNumber]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 61\n                  }, this)\n                );\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }, this), showPeriod && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timePeriod\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Time period\",\n          mode: \"multiple\",\n          className: \"timespan\",\n          onChange: value => {\n            this.setState({\n              span: value,\n              completeAlert: false\n            });\n          },\n          children: timeSpanArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmBtn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"confirm\",\n          onClick: this.confirmBooking.bind(this),\n          children: \" Confirm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), completeAlert && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"completeAlert\",\n          children: \"Please complete the form!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SelectRoom;","map":{"version":3,"sources":["/Users/panghaosen/Desktop/first-react-demo/src/view/selectRoom/index.jsx"],"names":["React","DatePicker","Button","Select","moment","deepclone","axios","Option","SelectRoom","Component","constructor","props","showRoom","value","roomList","state","setState","people","completeAlert","deepcopy","cloneDeep","map","v","roomChildren","disabled","timeAvailable","date","dateString","showPeriod","inputDate","selectRoomBtn","item","currentCheckedRoom","roomNumber","get","params","room","then","res","availableArr","timeSpan","forEach","index","data","i","span","time","key","numberPeople","roomSize","confirmBooking","length","history","push","pathname","render","timeSpanArray","currentDate","add","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DatePicker } from 'antd';\nimport './index.css';\nimport { Button, Select } from 'antd';\nimport moment from 'moment'\nimport deepclone from 'loadsh';\nimport axios from 'axios'\nconst { Option } = Select;\n// const children = [<Option key={0}>13:00-14:00</Option>, <Option key={1}>14:00-15:00</Option>, <Option key={2}>15:00-16:00</Option>, <Option key={3}>16:00-17:00</Option>, <Option key={4}>17:00-18:00</Option>, <Option key={5}>18:00-19:00</Option>, <Option key={6}>19:00-20:00</Option>, <Option key={7}>20:00-21:00</Option>, <Option key={8}>21:00-22:00</Option>, <Option key={9}>22:00-23:00</Option>, <Option key={10}>23:00-24:00</Option>];\n\n\n\n\nclass SelectRoom extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state =\n        {\n            completeAlert: false,\n            span: [],\n            currentCheckedRoom: '',\n            inputDate: '',\n            people: '',\n            showRoom: false,\n            showPeriod: false,\n            timeSpan: [\n                {\n                    key: 0,\n                    time: '13:00-14:00',\n                    disabled: false\n                },\n                {\n                    key: 1,\n                    time: '14:00-15:00',\n                    disabled: false\n                },\n                {\n                    key: 2,\n                    time: '15:00-16:00',\n                    disabled: false\n                },\n                {\n                    key: 3,\n                    time: '16:00-17:00',\n                    disabled: false\n                },\n                {\n                    key: 4,\n                    time: '17:00-18:00',\n                    disabled: false\n                },\n                {\n                    key: 5,\n                    time: '18:00-19:00',\n                    disabled: false\n                },\n                {\n                    key: 6,\n                    time: '19:00-20:00',\n                    disabled: false\n                },\n                {\n                    key: 7,\n                    time: '20:00-21:00',\n                    disabled: false\n                },\n                {\n                    key: 8,\n                    time: '21:00-22:00',\n                    disabled: false\n                },\n                {\n                    key: 9,\n                    time: '22:00-23:00',\n                    disabled: false\n                },\n                {\n                    key: 10,\n                    time: '23:00-24:00',\n                    disabled: false\n                }\n            ],\n            numberPeople: [{\n                value: '1-3',\n                key: '1'\n            },\n            {\n                value: '4-8',\n                key: '2'\n            }, {\n                value: '9-15',\n                key: '3'\n            }, {\n                value: '16+',\n                key: '4'\n            }],\n            roomList: [\n                {\n                    roomSize: 'small',\n                    roomChildren: [\n                        {\n                            roomNumber: 'Small Room 1',\n                            disabled: false\n                        }, {\n                            roomNumber: 'Small Room 2',\n                            disabled: false\n                        }\n                    ]\n                }, {\n                    roomSize: 'middle',\n                    roomChildren: [\n                        {\n                            roomNumber: 'Middle Room 1',\n                            disabled: false\n                        }, {\n                            roomNumber: 'Middle Room 2',\n                            disabled: false\n                        }\n                    ]\n                }, {\n                    roomSize: 'large',\n                    roomChildren: [\n                        {\n                            roomNumber: 'Large Room 1',\n                            disabled: false\n                        }, {\n                            roomNumber: 'Large Room 2',\n                            disabled: false\n                        }, {\n                            roomNumber: 'Large Room 3',\n                            disabled: false\n                        }\n                    ]\n                }, {\n                    roomSize: 'party',\n                    roomChildren: [\n                        {\n                            roomNumber: 'Party Room',\n                            disabled: false\n                        }\n                    ]\n                }\n\n            ]\n        }\n\n    }\n\n    confirmBooking() {\n        let people = this.state.people\n        let inputDate = this.state.inputDate\n        let room = this.state.currentCheckedRoom\n        let span = this.state.span\n        if (!people || !inputDate || !room || !span.length) {\n            this.setState({\n                completeAlert:true\n            })\n            return;\n        }   \n    \n            this.props.history.push({\n                pathname: '/bookTime',\n                state: {\n                    people,\n                    inputDate,\n                    room,\n                    span\n                }\n            })\n    }\n\n    showRoom = (value) => {\n        var { roomList, } = this.state\n        if (value.value != null) {\n            this.setState({\n                showRoom: true,\n                people: value.value,\n                completeAlert:false\n            })\n            if (value.value === '1-3') {\n                let deepcopy = deepclone.cloneDeep(roomList)\n                deepcopy.map((v) => {\n                    v.roomChildren.map((value) => {\n                        return value.disabled = true\n                    })\n                    return true\n                })\n                deepcopy[0].roomChildren[0].disabled = false\n                deepcopy[0].roomChildren[1].disabled = false\n                this.setState({\n                    roomList: deepcopy\n                })\n            } else if (value.value === '4-8') {\n                let deepcopy = deepclone.cloneDeep(roomList)\n                deepcopy.map((v) => {\n                    v.roomChildren.map((value) => {\n                        return value.disabled = true\n                    })\n                    return true\n                })\n                deepcopy[1].roomChildren[0].disabled = false\n                deepcopy[1].roomChildren[1].disabled = false\n                this.setState({\n                    roomList: deepcopy\n                })\n            } else if (value.value === '9-15') {\n                let deepcopy = deepclone.cloneDeep(roomList)\n                deepcopy.map((v) => {\n                    v.roomChildren.map((value) => {\n                        return value.disabled = true\n                    })\n                    return true\n                })\n                deepcopy[2].roomChildren[0].disabled = false\n                deepcopy[2].roomChildren[1].disabled = false\n                deepcopy[2].roomChildren[2].disabled = false\n                this.setState({\n                    roomList: deepcopy\n                })\n            } else {\n                let deepcopy = deepclone.cloneDeep(roomList)\n                deepcopy.map((v) => {\n                    v.roomChildren.map((value) => {\n                        return value.disabled = true\n                    })\n                    return true\n                })\n                deepcopy[3].roomChildren[0].disabled = false\n                this.setState({\n                    roomList: deepcopy\n                })\n            }\n        }\n    }\n\n    timeAvailable = (date, dateString) => {\n        // console.log('datatstring', dateString)\n        this.setState({\n            showPeriod: true,\n            inputDate: dateString,\n            completeAlert:false\n        })\n\n    }\n\n\n    selectRoomBtn = (item) => {\n        this.setState({\n            currentCheckedRoom: item.roomNumber\n        })\n        axios.get('/api/queryAvailableSpan', {\n            params: {\n                inputDate: this.state.inputDate,\n                room: item.roomNumber\n            }\n        }).then((res) => {\n            let availableArr = deepclone.cloneDeep(this.state.timeSpan)\n            availableArr.forEach((value, index) => {\n                value.disabled = false\n                res.data.forEach((v, i) => {\n                    if (v.span === value.time) {\n                        value.disabled = true\n                    } \n                })\n            })\n            this.setState({\n                timeSpan: availableArr\n            })\n\n        })\n\n\n    }\n\n    render() {\n        var { roomList, numberPeople, timeSpan, showRoom, showPeriod, completeAlert } = this.state\n        // var {roomChildren} = roomList\n\n        var timeSpanArray = []\n        timeSpan.map((value, index) => {\n            return timeSpanArray.push(<Option disabled={value.disabled} value={value.time} key={index}>{value.time}</Option>)\n        })\n        return (\n            < div className=\"select_room_main_board\" >\n                <p>Select Room</p>\n                <br></br>\n                <div className='dataInputBoard'>\n                    <Select\n                        onChange={this.showRoom}\n                        labelInValue='true'\n                        placeholder='Number of people'\n                        className='select_Number_of_people' >\n                        {\n                            numberPeople.map((value, index) => {\n                                return (<Option value={value.value} key={index}>{value.value}</Option>)\n                            })\n                        }\n                    </Select>\n                    <DatePicker placeholder='Date' className='inputDate' disabledDate={(currentDate) => {\n                        return currentDate && currentDate > moment().add(7, 'days')\n                    }}\n                        onChange={this.timeAvailable}\n                    />\n                </div>\n                <br></br>\n                {\n                    showRoom && (\n                        <div className='select_room'  >\n                            {\n                                roomList.map((value, index) => {\n                                    return (\n                                        <div className='room_item' key={index}>\n                                            <div key={index} >\n                                                {\n                                                    value.roomChildren.map((v, i) => {\n                                                        return (\n                                                            // <Radio.Button key={Math.random()} value=\"a\">{v.roomNumber}</Radio.Button>\n                                                            <Button disabled={v.disabled} value={v.roomSize} className={v.roomNumber} key={i}\n                                                                onClick={() => {\n                                                                    this.selectRoomBtn(v);\n                                                                }}\n                                                            > {v.roomNumber}</Button>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                }\n\n                {\n                    showPeriod && (\n                        <div className='timePeriod'>\n                            <Select placeholder=\"Time period\" mode=\"multiple\" className='timespan' onChange={(value) => {\n                                this.setState({\n                                    span: value,\n                                    completeAlert:false\n                                })\n                            }}>\n                                {timeSpanArray}\n                            </Select>\n                        </div>\n                    )\n                }\n                <br />\n                <div className=\"confirmBtn\">\n                    <Button className=\"confirm\" onClick={this.confirmBooking.bind(this)}> Confirm </Button>                     \n                    {\n                        completeAlert && (<span className='completeAlert'>Please complete the form!</span>)\n                        \n                    }\n                </div>\n\n            </div >\n        )\n    }\n}\n\nexport default SelectRoom;"]},"metadata":{},"sourceType":"module"}